:root {
    /* ----- Image Component ----- */
    /* Adjust the image size for responsive elements using clamp() to control
     the minimum and maximum size based on viewport dimensions. */
    --image-size: clamp(25vh, 25%, 70vw);

    /* ----- Progress Bar Component ----- */
    /* Modify the height of the progress bar to control its thickness; use 
     clamp() for responsive adjustments. */
    --progress-bar-height: clamp(1vh, 10px, 2.5vw);

    /* Change the background color of the progress bar to customize its appearance. */
    --progress-bar-background: #dceb8d;

    /* Set the color of the sliding element in the progress bar to customize its look. */
    --progress-bar-slider-color: #aaae8e;

    /* Adjust the duration of the progress bar animation to control speed; 
     modify this to create faster or slower transitions. */
    --progress-bar-animation-time: 2s;

    /* Set a delay before the progress bar animation starts; adjust this for 
     timing preferences in animations. */
    --progress-bar-animation-delay: 0.3s;

    /* ----- Button Component ----- */
    /* Change the background color of buttons to customize their appearance. */
    --button-background: white;

    /* Modify the text color on buttons to suit your design theme. */
    --button-text-color: black;

    /* Adjust the border color of buttons for styling purposes. */
    --button-border-color: grey;

    /* Set vertical padding for buttons to control space above and below the text. */
    --button-vertical-padding: 1%;

    /* Change horizontal padding for buttons to adjust space on the sides of the text. */
    --button-horizontal-padding: 4%;

    /* Modify the font size for button text to fit your design specifications. */
    --button-font-size: 3vh;

    /* Adjust the border radius of buttons to create more or less rounded corners. */
    --border-radius: 32px;

    /* Set the bottom margin for buttons to control the space below them. */
    --button-bottom-margin: 12%;

    /* Change the background color of buttons when in a loading state for visual feedback. */
    --button-loading-background: #d3d3d3;

    /* Modify the text color of buttons during the loading state to indicate progress. */
    --button-loading-text-color: #7a7a7a;

    /* Adjust the border color of buttons during loading to maintain visual consistency. */
    --button-loading-border-color: #b0b0b0;

    /* Set the size of the loading circle within buttons to fit design requirements. */
    --button-loading-circle-size: 16px;

    /* Change the line thickness of the loading circle to adjust the appearance of the indicator. */
    --button-loading-circle-line-size: 2px;

    /* Adjust the color of the loading circle to match the design theme. */
    --button-loading-circle-color: #7a7a7a;

    /* Modify the animation duration for the loading circle to change its speed. */
    --button-loading-circle-animation-time: 1s;

    /* Set the left margin for the loading circle to control spacing between it and the button text. */
    --button-loading-circle-left-margin: 10px;

    /* ----- Loader Component ----- */
    /* Change the top margin of the loader to control space above it. */
    --loader-margin-top: 3%;

    /* Modify the size of the loader circles to fit the design and responsiveness needs. */
    --loader-circle-size: clamp(2.5vh, 20px, 5vw);

    /* Adjust the border radius of loader circles for roundness. */
    --loader-circle-border-radius: 50%;

    /* Change the vertical margin for circular loaders to control spacing around them. */
    --loader-circular-vertical-margin: 0;

    /* Set the horizontal margin for circular loaders to adjust spacing on the sides. */
    --loader-circular-horizontal-margin: calc(var(--loader-circle-size) / 4);

    /* Modify colors for different loader circles to customize their appearance. */
    --loader-circle-color-1: #efefef;
    --loader-circle-color-2: #babbb1;
    --loader-circle-color-3: #090c00;
    --loader-circle-color-4: #dcf264;

    /* Change the animation duration for the loader to adjust the timing of the loading effect. */
    --loader-animation-time: 1.5s;

    /* Cookies. */
    --cookies-primary-bg: #e4f4f6;
    --cookies-btn-primary: #103900;
    --cookies-btn-secondary: #ff0000;
    --cookies-btn-default: #777;
    --cookies-text-color: #333;
    --cookies-slider-bg: #ccc;
    --cookies-slider-checked: #2196f3;
}

body {
    height: 100%;
    width: 100%;
    inset: 0;
    margin: 0;
    padding: 0;
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
}

.progress {
    position: absolute;
    height: var(--progress-bar-height);
    top: 0%;
    display: flex;
    width: 100%;
    background-color: var(--progress-bar-background);
}

/* .progress .indeterminate:before {
        content: "";
        position: absolute;
        background-color: var(--progress-bar-slider-color);
        will-change: left, right;
        -webkit-animation: indeterminate 2.1s
          cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
        animation: indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395)
          infinite;
      } */

.progress .indeterminate {
    content: "";
    position: absolute;
    background-color: var(--progress-bar-slider-color);
    top: 0;
    left: 0;
    bottom: 0;
    will-change: left, right;
    -webkit-animation: indeterminate-short var(--progress-bar-animation-time) cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
    animation: indeterminate-short var(--progress-bar-animation-time) cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
    -webkit-animation-delay: var(--progress-bar-animation-delay);
    animation-delay: var(--progress-bar-animation-delay);
}

@-webkit-keyframes indeterminate {
    0% {
        left: -35%;
        right: 100%;
    }

    60% {
        left: 100%;
        right: -90%;
    }

    100% {
        left: 100%;
        right: -90%;
    }
}

@keyframes indeterminate {
    0% {
        left: -35%;
        right: 100%;
    }

    60% {
        left: 100%;
        right: -90%;
    }

    100% {
        left: 100%;
        right: -90%;
    }
}

@-webkit-keyframes indeterminate-short {
    0% {
        left: -200%;
        right: 100%;
    }

    60% {
        left: 107%;
        right: -8%;
    }

    100% {
        left: 107%;
        right: -8%;
    }
}

@keyframes indeterminate-short {
    0% {
        left: -200%;
        right: 100%;
    }

    60% {
        left: 107%;
        right: -8%;
    }

    100% {
        left: 107%;
        right: -8%;
    }
}

.column {
    flex-direction: column;
}

.splash {
    align-items: center;
    display: flex;
    /* Center both horizontally and vertically */
    height: auto;
    /* Set height to 25% of the viewport height */
    justify-content: center;
    width: 100vw;
    /* Set width to 25% of the viewport width */
    /* color: grey; */
    /* mask: linear-gradient(-60deg, #000 30%, #0004, #000 70%) right/300% 100%;
      -webkit-mask: linear-gradient(-60deg, #000 30%, #0004, #000 70%) right/300% 100%; */
    /* background-repeat: no-repeat; */
    /* animation: splash 4.0s infinite; */

    /* min-width: var(--image-min-size);
        min-height: var(--image-min-size); */
}

/* @keyframes splash {
      0% {
        -webkit-mask-position: 85%;
      }

      100% {
        -webkit-mask-position: 0%;
      }
    } */

.splash img {
    /* New animation for disappearing */
    opacity: 1;
    /* Initial opacity set to 1 */
    width: var(--image-size);
    /* Increase image size to 25% of viewport width */
    height: var(--image-size);
    /* Increase image size to 25% of viewport height */
    /* min-width: var(--image-min-size);
        min-height: var(--image-min-size); */
}

/* .image-container {
        width: 300px;
        height: 300px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
      } */

/* .bouncing-image {
        width: 100%;
        height: auto;
      } */

/* .image-container:hover .bouncing-image {
      animation: slowBounce 4s cubic-bezier(0.25, 0.1, 0.25, 1) infinite;
    }

    @keyframes slowBounce {

      0%,
      20%,
      50%,
      80%,
      100% {
        transform: translateY(0);
      }

      40% {
        transform: translateY(-20px);
      }

      60% {
        transform: translateY(-10px);
      }
    } */

#retry-button {
    position: absolute;
    display: none;
    justify-content: center;
    left: 50%;
    transform: translateX(-50%);
    background-color: var(--button-background);
    color: var(--button-text-color);
    border: 1px solid var(--button-border-color);
    text-align: center;
    padding: var(--button-vertical-padding) var(--button-horizontal-padding);
    cursor: pointer;
    bottom: var(--button-bottom-margin);
    font-size: var(--button-font-size);
    border-radius: var(--border-radius);
    transition: background-color 0.3s ease, color 0.3s ease,
        border 0.3s ease, bottom 0.5s ease;
    z-index: 10;
}

#retry-button.loading {
    transform: translate(-50%, -50%);
    display: flex;
    bottom: 40vh;
    background-color: var(--button-loading-background);
    margin-top: 0vh;
    color: var(--button-loading-text-color);
    border: 1px solid var(--button-loading-border-color);
    cursor: wait;
}

/* .button.loading::after {
        width: 16px;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 16px;
        margin-left: 8px;
        border: 1px solid #7a7a7a;
        border-radius: 50%;
        border-top-color: transparent;
      } */

.loading-circle {
    display: none;
    width: var(--button-loading-circle-size);
    height: var(--button-loading-circle-size);
    border: var(--button-loading-circle-line-size) solid var(--button-loading-circle-color);
    border-radius: 50%;
    margin-left: var(--button-loading-circle-left-margin);
    border-top-color: transparent;
    animation: spin var(--button-loading-circle-animation-time) linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/*Loader Style*/
.loader {
    text-align: center;
    vertical-align: middle;
    position: absolute;
    display: flex;
    margin-top: var(--loader-margin-top);
    justify-content: center;
    left: 50%;
    transform: translateX(-50%);
    box-shadow: 0px 40px 60px -20px rgba(0, 0, 0, 0.2);
}

.loader span {
    display: block;
    width: var(--loader-circle-size);
    height: var(--loader-circle-size);
    background: var(--loader-circle-color-1);
    border-radius: 50%;
    margin: var(--loader-circular-vertical-margin) var(--loader-circular-horizontal-margin);
    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
}

.loader span:nth-child(2) {
    background: var(--loader-circle-color-2);
}

.loader span:nth-child(3) {
    background: var(--loader-circle-color-3);
}

.loader span:nth-child(4) {
    background: var(--loader-circle-color-4);
}

.loader span:not(:last-child) {
    animation: animate var(--loader-animation-time) linear infinite;
}

@keyframes animate {
    0% {
        transform: translateX(0);
    }

    100% {
        transform: translateX(calc(var(--loader-circle-size) + var(--loader-circular-horizontal-margin) * 2));
    }
}

.loader span:last-child {
    animation: jump var(--loader-animation-time) ease-in-out infinite;
}

@keyframes jump {
    0% {
        transform: translate(0, 0);
    }

    10% {
        transform: translate(calc(0.5 * var(--loader-circle-size)),
                calc(-0.5 * var(--loader-circle-size)));
    }

    20% {
        transform: translate(calc(1 * var(--loader-circle-size)),
                calc(0.5 * var(--loader-circle-size)));
    }

    30% {
        transform: translate(calc(1.5 * var(--loader-circle-size)),
                calc(-2.5 * var(--loader-circle-size)));
    }

    70% {
        transform: translate(calc(-5 * (var(--loader-circle-size) + var(--loader-circular-horizontal-margin)) - var(--loader-circular-horizontal-margin)),
                calc(-2.5 * var(--loader-circle-size)));
    }

    80% {
        transform: translate(calc(-5 * (var(--loader-circle-size) + var(--loader-circular-horizontal-margin)) - var(--loader-circular-horizontal-margin)),
                calc(0.5 * var(--loader-circle-size)));
    }

    90% {
        transform: translate(calc(-5 * (var(--loader-circle-size) + var(--loader-circular-horizontal-margin)) + 0.5 * var(--loader-circular-horizontal-margin)),
                calc(-0.5 * var(--loader-circle-size)));
    }

    100% {
        transform: translate(calc(-5 * (var(--loader-circle-size) + var(--loader-circular-horizontal-margin)) + var(--loader-circular-horizontal-margin)),
                0);
    }
}

/* Cookies styles */
/* Utility classes */
.hidden {
    display: none;
    visibility: hidden;
}

/* Root variables for colors and typography */

/* Container for the consent popup */
.consent-div {
    position: fixed;
    bottom: 20px;
    width: auto;
    max-width: 90%;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: var(--cookies-primary-bg);
    border-radius: var(--border-radius);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 20;
    font-family: Arial, sans-serif;
    color: var(--cookies-text-color);
    pointer-events: auto;
}

@media (min-width: 900px) {
    .consent-div {
        max-width: 800px;
    }
}

/* Row layout */
.row-div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    margin-bottom: 8px;
    justify-self: center;
}

/* Button styles */
#accept-btn,
#save-btn {
    background-color: var(--cookies-btn-primary);
}

#reject-btn,
#cancel-btn {
    background-color: var(--cookies-btn-secondary);
}

.btn {
    height: 32px;
    min-width: 120px;
    padding: 0 12px;
    background-color: var(--cookies-btn-default);
    border: none;
    color: #fff;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: background-color 0.3s ease;
    font-size: 14px;
}

.btn:hover {
    filter: brightness(0.9);
}

.inline {
    display: inline-block;
    margin-right: 8px;
}

/* Headings */
h2 {
    margin: 0.5em 0 0.2em 0;
    font-size: 1.25em;
    text-align: center;
}

h3 {
    margin: 0.5em 0 0.2em 0;
    font-size: 1em;
}

/* Switch component */
.switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 25px;
}

/* Hide default checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* Slider styling */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--cookies-slider-bg);
    transition: background-color 0.3s ease;
    border-radius: var(--border-radius);
}

.slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 4px;
    bottom: 4px;
    background-color: #fff;
    transition: transform 0.3s ease;
    border-radius: 50%;
}

input:checked+.slider {
    background-color: var(--cookies-slider-checked);
}

input:focus+.slider {
    box-shadow: 0 0 2px var(--cookies-slider-checked);
}

input:checked+.slider:before {
    transform: translateX(24px);
}

#cookie_setting_button,
#cookie_button {
    width: 95%;
    display: flex;
    justify-content: space-between;
    column-gap: 5px;
    row-gap: 5px;
    flex-flow: row wrap;
    padding: 0px 0px 10px 0px;
}

@media (max-width: 480px) {

    #cookie_setting_button,
    #cookie_button {
        flex-flow: column-reverse;
    }
}

.cookies_container,
.cookies_text {
    max-width: 95%;
    justify-self: center;
}

.cookies_container {
    width: 95%;
}

.cookies_setting_text {
    max-width: 95%;
    justify-self: start;
}