AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template sets up an S3 bucket, a CloudFront distribution, OIDC provider, and IAM roles for GitHub Actions with S3 sync and CloudFront invalidation capabilities.

Parameters:
  RefererValue:
    Type: String
    Description: The referer value to use for S3 bucket policy
    NoEcho: true
    Default: "L6g9Yu_nTjACT_rvZb"  # Make sure to use a safe referer value without special characters

Resources:
  S3BucketForWeb:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: veteran-dev
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketForWeb
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Principal: "*"
            Action: "s3:GetObject"
            Resource:
              - !Sub 'arn:aws:s3:::${S3BucketForWeb}/*'
              - !Sub 'arn:aws:s3:::${S3BucketForWeb}'
            Condition:
              StringLike:
                "aws:Referer": !Ref RefererValue

  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt [ S3BucketForWeb, DomainName ]
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
            OriginCustomHeaders:
              - HeaderName: Referer
                HeaderValue: !Ref RefererValue
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          CachePolicyId: '658327ea-f89d-4fab-a63d-7e88639e58f6'  # Replace with the actual Cache Policy ID
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
            Headers:
              - Referer

  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Access identity for GitHub Actions S3 bucket

  GitHubOIDCProvider:
    Type: 'AWS::IAM::OIDCProvider'
    Properties:
      Url: 'https://token.actions.githubusercontent.com'
      ClientIdList:
        - 'sts.amazonaws.com'
        - 'https://github.com/CodingHouseStudio'
      ThumbprintList:
        - '1b511abead59c6ce207077c0bf0e0043b1382612'  # Replace with the latest thumbprint if necessary

  GitHubActionsRoleS3Sync:
    Type: 'AWS::IAM::Role'
    DependsOn:
      - GitHubOIDCProvider
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: !GetAtt GitHubOIDCProvider.Arn
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:CodingHouseStudio/*"
      Policies:
        - PolicyName: S3SyncPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action: "s3:ListBucket"
                Resource: !Sub 'arn:aws:s3:::${S3BucketForWeb}'
              - Effect: "Allow"
                Action: "s3:*"
                Resource: !Sub 'arn:aws:s3:::${S3BucketForWeb}/*'


  GitHubActionsRoleCloudFrontInvalidate:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: !GetAtt GitHubOIDCProvider.Arn
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:CodingHouseStudio/*"
      Policies:
        - PolicyName: CloudFrontInvalidatePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: "AllowCloudFrontInvalidation"
                Effect: "Allow"
                Action: "cloudfront:CreateInvalidation"
                Resource: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'



Outputs:
  S3BucketName:
    Description: The name of the S3 bucket for web hosting
    Value: !Ref S3BucketForWeb

  CloudFrontDistributionID:
    Description: The ID of the CloudFront Distribution
    Value: !Ref CloudFrontDistribution

  CloudFrontDomainName:
    Description: The domain name of the CloudFront Distribution
    Value: !GetAtt [CloudFrontDistribution, DomainName]

  GitHubOIDCProviderARN:
    Description: The ARN of the GitHub OIDC identity provider
    Value: !Ref GitHubOIDCProvider

  IAMRoleS3SyncARN:
    Description: The ARN of the IAM role for S3 sync
    Value: !GetAtt [GitHubActionsRoleS3Sync, Arn]

  CloudFrontInvalidateARN:
    Description: The ARN of the IAM role for CloudFront invalidation
    Value: !GetAtt [GitHubActionsRoleCloudFrontInvalidate, Arn]



