# ios_cd.yaml
name: EXPERIMENTAL build

# Controls when the workflow will run
on:
  workflow_dispatch:
    branches: [main]
concurrency:
  group: exp-$
  cancel-in-progress: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  #  ios-build:
  #    name: Deploy beta build to TestFlight
  #    runs-on: macOS-latest
  #    timeout-minutes: 35
  #    environment: development # We specify development since Web Production and Web Development are using the same environment variable names
  #    steps:
  #      - name: Setup Xcode version
  #        uses: maxim-lobanov/setup-xcode@v1
  #        with:
  #          xcode-version: latest-stable
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #      - name: Run Flutter tasks
  #        uses: subosito/flutter-action@v1
  #        with:
  #          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
  #          channel: 'stable'
  #      - name: Flutter clean
  #        run: flutter clean
  #      - name: Flutter Pub Get
  #        run: flutter pub get
  #      - name: Build runner
  #        run: flutter pub run build_runner build --delete-conflicting-outputs
  #      - name: Setup Ruby
  #        uses: ruby/setup-ruby@v1
  #        with:
  #          ruby-version: '3.0'
  #          bundler-cache: true
  #          working-directory: 'ios'
  #      - name: Fastlane Action
  #        uses: maierj/fastlane-action@v3.0.0
  #        with:
  #          lane: 'closed_beta'
  #          subdirectory: 'ios'
  #        env:
  #          DEVELOPER_APP_IDENTIFIER: '${{ secrets.DEVELOPER_APP_IDENTIFIER }}'
  #          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_ID }}'
  #          APPLE_ITC_TEAM_ID: '${{ secrets.APPLE_ITC_TEAM_ID }}'
  #          APPLE_TEAM_ID: '${{ secrets.APPLE_TEAM_ID }}'
  #          APPLE_KEY_ID: '${{ secrets.APPLE_KEY_ID }}'
  #          APPLE_KEY_ISSUER_ID: '${{ secrets.APPLE_KEY_ISSUER_ID }}'
  #          APPLE_APPSTORECONNECT_API_KEY: '${{ secrets.APPLE_APPSTORECONNECT_API_KEY }}'
  #          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
  #          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
  #          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
  #          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
  web_build:
    runs-on: ubuntu-latest # We are using ubuntu to deploy flutter web
    timeout-minutes: 20
    environment: development # We specify development since Web Production and Web Development are using the same environment variable names
    permissions: # set permissions for AWS creentials specifically
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.5
      - name: Flutter action
        uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
          channel: "stable"
      - run: flutter config --no-analytics
      - run: flutter config --no-cli-animations
      - name: Flutter Pub Get # get flutter packages information
        run: flutter pub get
      - name: Flutter code generation # generate any missing code from source code
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Flutter Pub Get # get flutter packages information
        run: flutter pub get
      - name: Build the Web static pages # generate deployment files
        run: |
          buildNumber=$(date +%s)
          flutter build web --release -t lib/main_development.dart --wasm --build-name=1.0.2 --build-number=$buildNumber --dart-define=FLAVOUR=development
          dt="$(date "+%s000")"
          mv build/web/main.dart.js build/web/$dt.main.dart.js
          sed "s/main.dart.js/$dt.main.dart.js/g" build/web/index.html >build/web/newindex.html
          mv build/web/newindex.html build/web/index.html
      - name: Configure AWS Credentials Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_S3_SYNC }} # we use Github OIDC authentication for this action
          aws-region: us-east-1
      - name: Deploy static site to S3 bucket # we will use delete option so that we can replace any of the same files
        run: aws s3 sync ./build/web ${{ secrets.S3_WEB_BUCKET }} --delete
      - name: Configure AWS Credentials Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_CLOUDFRONT_INVALIDATE }}
          aws-region: us-east-1
      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
#  android-build:
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#    environment: development # We specify development since Web Production and Web Development are using the same environment variable names
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: 12.x
#      - name: Decrypt Android keys
#        run: sh ./.github/scripts/decrypt_android_keys.sh
#        env:
#          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v1
#        with:
#          flutter-version: ${{ secrets.FLUTTER_FRAMEWORK_VERSION }}
#          channel: 'stable'
#      - name: Flutter Pub Get
#        run: flutter pub get
#      - name: Build runner
#        run: flutter pub run build_runner build --delete-conflicting-outputs
#      - name: Build Android release
#        run: flutter build appbundle --release
#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: '3.0'
#          bundler-cache: true
#          working-directory: 'android'
#      - name: Fastlane Action
#        uses: maierj/fastlane-action@v3.0.0
#        with:
#          lane: 'closed_beta'
#          subdirectory: 'android'
