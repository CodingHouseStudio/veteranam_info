// Mocks generated by Mockito 5.4.4 from annotations
// in kozak/test/test_mocks/test_repository_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:typed_data' as _i10;

import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_core/firebase_core.dart' as _i4;
import 'package:google_sign_in/google_sign_in.dart' as _i8;
import 'package:kozak/shared/shared.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserSetting_1 extends _i1.SmartFake implements _i3.UserSetting {
  _FakeUserSetting_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_2 extends _i1.SmartFake implements _i3.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIAppAuthenticationRepository_3 extends _i1.SmartFake
    implements _i3.IAppAuthenticationRepository {
  _FakeIAppAuthenticationRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_4 extends _i1.SmartFake implements _i4.FirebaseApp {
  _FakeFirebaseApp_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_5 extends _i1.SmartFake
    implements _i5.ActionCodeInfo {
  _FakeActionCodeInfo_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_6 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_7 extends _i1.SmartFake
    implements _i5.ConfirmationResult {
  _FakeConfirmationResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettings_8 extends _i1.SmartFake implements _i6.Settings {
  _FakeSettings_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_9<T extends Object?> extends _i1.SmartFake
    implements _i6.CollectionReference<T> {
  _FakeCollectionReference_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWriteBatch_10 extends _i1.SmartFake implements _i6.WriteBatch {
  _FakeWriteBatch_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoadBundleTask_11 extends _i1.SmartFake
    implements _i6.LoadBundleTask {
  _FakeLoadBundleTask_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_12<T1 extends Object?> extends _i1.SmartFake
    implements _i6.QuerySnapshot<T1> {
  _FakeQuerySnapshot_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuery_13<T extends Object?> extends _i1.SmartFake
    implements _i6.Query<T> {
  _FakeQuery_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentReference_14<T extends Object?> extends _i1.SmartFake
    implements _i6.DocumentReference<T> {
  _FakeDocumentReference_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_15<T1> extends _i1.SmartFake implements _i7.Future<T1> {
  _FakeFuture_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IHomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIHomeRepository extends _i1.Mock implements _i3.IHomeRepository {
  @override
  _i7.Future<
      _i2.Either<_i3.SomeFailure,
          List<_i3.QuestionModel>>> getQuestions() => (super.noSuchMethod(
        Invocation.method(
          #getQuestions,
          [],
        ),
        returnValue: _i7
            .Future<_i2.Either<_i3.SomeFailure, List<_i3.QuestionModel>>>.value(
            _FakeEither_0<_i3.SomeFailure, List<_i3.QuestionModel>>(
          this,
          Invocation.method(
            #getQuestions,
            [],
          ),
        )),
        returnValueForMissingStub: _i7
            .Future<_i2.Either<_i3.SomeFailure, List<_i3.QuestionModel>>>.value(
            _FakeEither_0<_i3.SomeFailure, List<_i3.QuestionModel>>(
          this,
          Invocation.method(
            #getQuestions,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.QuestionModel>>>);

  @override
  void addMockQuestions() => super.noSuchMethod(
        Invocation.method(
          #addMockQuestions,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IInformationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIInformationRepository extends _i1.Mock
    implements _i3.IInformationRepository {
  @override
  _i7.Stream<List<_i3.InformationModel>> getInformationItems() =>
      (super.noSuchMethod(
        Invocation.method(
          #getInformationItems,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.InformationModel>>.empty(),
        returnValueForMissingStub:
            _i7.Stream<List<_i3.InformationModel>>.empty(),
      ) as _i7.Stream<List<_i3.InformationModel>>);

  @override
  void addMockInformationItems() => super.noSuchMethod(
        Invocation.method(
          #addMockInformationItems,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IFeedbackRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIFeedbackRepository extends _i1.Mock
    implements _i3.IFeedbackRepository {
  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> sendFeedback(
          _i3.FeedbackModel? feedback) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFeedback,
          [feedback],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendFeedback,
            [feedback],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendFeedback,
            [feedback],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);
}

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i3.FirestoreService {
  @override
  set firebaseFirestore(_i6.FirebaseFirestore? setFirebaseFirestore) =>
      super.noSuchMethod(
        Invocation.setter(
          #firebaseFirestore,
          setFirebaseFirestore,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> addFeedback(_i3.FeedbackModel? feedback) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFeedback,
          [feedback],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addQuestion(_i3.QuestionModel? question) =>
      (super.noSuchMethod(
        Invocation.method(
          #addQuestion,
          [question],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i3.QuestionModel>> getQuestions() => (super.noSuchMethod(
        Invocation.method(
          #getQuestions,
          [],
        ),
        returnValue:
            _i7.Future<List<_i3.QuestionModel>>.value(<_i3.QuestionModel>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i3.QuestionModel>>.value(<_i3.QuestionModel>[]),
      ) as _i7.Future<List<_i3.QuestionModel>>);

  @override
  _i7.Future<List<_i3.FundModel>> getFunds() => (super.noSuchMethod(
        Invocation.method(
          #getFunds,
          [],
        ),
        returnValue: _i7.Future<List<_i3.FundModel>>.value(<_i3.FundModel>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i3.FundModel>>.value(<_i3.FundModel>[]),
      ) as _i7.Future<List<_i3.FundModel>>);

  @override
  _i7.Future<void> addFund(_i3.FundModel? fund) => (super.noSuchMethod(
        Invocation.method(
          #addFund,
          [fund],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserSetting(_i3.UserSetting? userSetting) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [userSetting],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setUserSetting({
    required _i3.UserSetting? userSetting,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserSetting,
          [],
          {
            #userSetting: userSetting,
            #userId: userId,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [userId],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [userId],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Stream<List<_i3.InformationModel>> getInformations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getInformations,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.InformationModel>>.empty(),
        returnValueForMissingStub:
            _i7.Stream<List<_i3.InformationModel>>.empty(),
      ) as _i7.Stream<List<_i3.InformationModel>>);

  @override
  _i7.Future<void> addInformation(_i3.InformationModel? information) =>
      (super.noSuchMethod(
        Invocation.method(
          #addInformation,
          [information],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<List<_i3.WorkModel>> getWorks() => (super.noSuchMethod(
        Invocation.method(
          #getWorks,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.WorkModel>>.empty(),
        returnValueForMissingStub: _i7.Stream<List<_i3.WorkModel>>.empty(),
      ) as _i7.Stream<List<_i3.WorkModel>>);

  @override
  _i7.Future<void> addWork(_i3.WorkModel? work) => (super.noSuchMethod(
        Invocation.method(
          #addWork,
          [work],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [IInvestorsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIInvestorsRepository extends _i1.Mock
    implements _i3.IInvestorsRepository {
  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>> getFunds() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFunds,
          [],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>>.value(
                _FakeEither_0<_i3.SomeFailure, List<_i3.FundModel>>(
          this,
          Invocation.method(
            #getFunds,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>>.value(
                _FakeEither_0<_i3.SomeFailure, List<_i3.FundModel>>(
          this,
          Invocation.method(
            #getFunds,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>>);

  @override
  void addMockFunds() => super.noSuchMethod(
        Invocation.method(
          #addMockFunds,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IAppAuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAppAuthenticationRepository extends _i1.Mock
    implements _i3.IAppAuthenticationRepository {
  @override
  _i7.Stream<_i3.User> get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _i7.Stream<_i3.User>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.User>.empty(),
      ) as _i7.Stream<_i3.User>);

  @override
  _i3.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i3.User);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUpWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUp({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<String?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting() => (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> sendVerificationCode(
          {required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCode,
          [],
          {#email: email},
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> deleteUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> updateUserSetting(
          _i3.UserSetting? userSetting) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [userSetting],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);
}

/// A class which mocks [AppAuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppAuthenticationRepository extends _i1.Mock
    implements _i3.AppAuthenticationRepository {
  @override
  bool get isWeb => (super.noSuchMethod(
        Invocation.getter(#isWeb),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isWeb(bool? _isWeb) => super.noSuchMethod(
        Invocation.setter(
          #isWeb,
          _isWeb,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<_i3.User> get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _i7.Stream<_i3.User>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.User>.empty(),
      ) as _i7.Stream<_i3.User>);

  @override
  _i3.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i3.User);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUpWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUp({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<String?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting() => (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> sendVerificationCode(
          {required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCode,
          [],
          {#email: email},
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> deleteUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> updateUserSetting(
          _i3.UserSetting? userSetting) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [userSetting],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  @override
  _i3.IAppAuthenticationRepository get iAppAuthenticationRepository =>
      (super.noSuchMethod(
        Invocation.getter(#iAppAuthenticationRepository),
        returnValue: _FakeIAppAuthenticationRepository_3(
          this,
          Invocation.getter(#iAppAuthenticationRepository),
        ),
        returnValueForMissingStub: _FakeIAppAuthenticationRepository_3(
          this,
          Invocation.getter(#iAppAuthenticationRepository),
        ),
      ) as _i3.IAppAuthenticationRepository);

  @override
  _i7.Stream<_i3.AuthenticationStatus> get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i7.Stream<_i3.AuthenticationStatus>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.AuthenticationStatus>.empty(),
      ) as _i7.Stream<_i3.AuthenticationStatus>);

  @override
  _i3.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i3.User);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting() => (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logIn,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logIn,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logIn,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUpWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendVerificationCodeToEmail({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCodeToEmail,
          [],
          {#email: email},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserSetting({required _i3.UserSetting? userSetting}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [],
          {#userSetting: userSetting},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockIStorage extends _i1.Mock implements _i3.IStorage {
  @override
  _i7.Future<String?> readOne({required String? keyItem}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readOne,
          [],
          {#keyItem: keyItem},
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<bool> writeOne({
    required String? keyItem,
    required String? valueItem,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeOne,
          [],
          {
            #keyItem: keyItem,
            #valueItem: valueItem,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i8.GoogleSignIn {
  @override
  _i8.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i8.SignInOption.standard,
        returnValueForMissingStub: _i8.SignInOption.standard,
      ) as _i8.SignInOption);

  @override
  List<String> get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<_i8.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i7.Stream<_i8.GoogleSignInAccount?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i8.GoogleSignInAccount?>.empty(),
      ) as _i7.Stream<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
          {
            #suppressErrors: suppressErrors,
            #reAuthenticate: reAuthenticate,
          },
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAccessScopes,
          [scopes],
          {#accessToken: accessToken},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  @override
  _i4.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_4(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_4(
          this,
          Invocation.getter(#app),
        ),
      ) as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i5.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i7.Future<_i5.ActionCodeInfo>.value(_FakeActionCodeInfo_5(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.ActionCodeInfo>.value(_FakeActionCodeInfo_5(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i7.Future<_i5.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i5.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i7.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i7.Future<List<String>>.value(<String>[]),
      ) as _i7.Future<List<String>>);

  @override
  _i7.Future<_i5.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<_i5.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i7.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i5.User?>.empty(),
      ) as _i7.Stream<_i5.User?>);

  @override
  _i7.Stream<_i5.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i7.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i5.User?>.empty(),
      ) as _i7.Stream<_i5.User?>);

  @override
  _i7.Stream<_i5.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i7.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i5.User?>.empty(),
      ) as _i7.Stream<_i5.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i5.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i5.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i5.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i5.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithCredential(
          _i5.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithAuthProvider(
          _i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.UserCredential> signInWithProvider(
          _i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<_i5.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i7.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_7(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_7(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i7.Future<_i5.ConfirmationResult>);

  @override
  _i7.Future<_i5.UserCredential> signInWithPopup(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.UserCredential>.value(_FakeUserCredential_6(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i7.Future<_i5.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i5.PhoneMultiFactorInfo? multiFactorInfo,
    required _i5.PhoneVerificationCompleted? verificationCompleted,
    required _i5.PhoneVerificationFailed? verificationFailed,
    required _i5.PhoneCodeSent? codeSent,
    required _i5.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i5.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [IWorkRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIWorkRepository extends _i1.Mock implements _i3.IWorkRepository {
  @override
  _i7.Stream<List<_i3.WorkModel>> getWorks() => (super.noSuchMethod(
        Invocation.method(
          #getWorks,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.WorkModel>>.empty(),
        returnValueForMissingStub: _i7.Stream<List<_i3.WorkModel>>.empty(),
      ) as _i7.Stream<List<_i3.WorkModel>>);

  @override
  void addMockWorks() => super.noSuchMethod(
        Invocation.method(
          #addMockWorks,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i6.FirebaseFirestore {
  @override
  _i4.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_4(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_4(
          this,
          Invocation.getter(#app),
        ),
      ) as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseURL => (super.noSuchMethod(
        Invocation.getter(#databaseURL),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
      ) as String);

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
        Invocation.setter(
          #databaseURL,
          _databaseURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseId => (super.noSuchMethod(
        Invocation.getter(#databaseId),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#databaseId),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#databaseId),
        ),
      ) as String);

  @override
  set databaseId(String? _databaseId) => super.noSuchMethod(
        Invocation.setter(
          #databaseId,
          _databaseId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set settings(_i6.Settings? settings) => super.noSuchMethod(
        Invocation.setter(
          #settings,
          settings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Settings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettings_8(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeSettings_8(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i6.Settings);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i6.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_9<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_9<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i6.CollectionReference<Map<String, dynamic>>);

  @override
  _i6.WriteBatch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeWriteBatch_10(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeWriteBatch_10(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i6.WriteBatch);

  @override
  _i7.Future<void> clearPersistence() => (super.noSuchMethod(
        Invocation.method(
          #clearPersistence,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> enablePersistence(
          [_i6.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #enablePersistence,
          [persistenceSettings],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.LoadBundleTask loadBundle(_i10.Uint8List? bundle) => (super.noSuchMethod(
        Invocation.method(
          #loadBundle,
          [bundle],
        ),
        returnValue: _FakeLoadBundleTask_11(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
        returnValueForMissingStub: _FakeLoadBundleTask_11(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
      ) as _i6.LoadBundleTask);

  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
    bool? automaticHostMapping = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #useFirestoreEmulator,
          [
            host,
            port,
          ],
          {
            #sslEnabled: sslEnabled,
            #automaticHostMapping: automaticHostMapping,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i6.QuerySnapshot<T>> namedQueryWithConverterGet<T>(
    String? name, {
    _i6.GetOptions? options = const _i6.GetOptions(),
    required _i6.FromFirestore<T>? fromFirestore,
    required _i6.ToFirestore<T>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryWithConverterGet,
          [name],
          {
            #options: options,
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_12<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_12<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
      ) as _i7.Future<_i6.QuerySnapshot<T>>);

  @override
  _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i6.GetOptions? options = const _i6.GetOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryGet,
          [name],
          {#options: options},
        ),
        returnValue: _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_12<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_12<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
      ) as _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i6.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectionGroup,
          [collectionPath],
        ),
        returnValue: _FakeQuery_13<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_13<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
      ) as _i6.Query<Map<String, dynamic>>);

  @override
  _i7.Future<void> disableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #disableNetwork,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #doc,
          [documentPath],
        ),
        returnValue: _FakeDocumentReference_14<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_14<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
      ) as _i6.DocumentReference<Map<String, dynamic>>);

  @override
  _i7.Future<void> enableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #enableNetwork,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<void> snapshotsInSync() => (super.noSuchMethod(
        Invocation.method(
          #snapshotsInSync,
          [],
        ),
        returnValue: _i7.Stream<void>.empty(),
        returnValueForMissingStub: _i7.Stream<void>.empty(),
      ) as _i7.Stream<void>);

  @override
  _i7.Future<T> runTransaction<T>(
    _i6.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTransaction,
          [transactionHandler],
          {
            #timeout: timeout,
            #maxAttempts: maxAttempts,
          },
        ),
        returnValue: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_15<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
        returnValueForMissingStub: _i9.ifNotNull(
              _i9.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_15<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i7.Future<void> terminate() => (super.noSuchMethod(
        Invocation.method(
          #terminate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> waitForPendingWrites() => (super.noSuchMethod(
        Invocation.method(
          #waitForPendingWrites,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setIndexConfiguration({
    required List<_i6.Index>? indexes,
    List<_i6.FieldOverrides>? fieldOverrides,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfiguration,
          [],
          {
            #indexes: indexes,
            #fieldOverrides: fieldOverrides,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setIndexConfigurationFromJSON(String? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfigurationFromJSON,
          [json],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
