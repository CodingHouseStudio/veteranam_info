// Mocks generated by Mockito 5.4.4 from annotations
// in kozak/test/test_mocks/test_repository_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:firebase_core/firebase_core.dart' as _i5;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i4;
import 'package:google_sign_in/google_sign_in.dart' as _i8;
import 'package:kozak/shared/shared.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserSetting_1 extends _i1.SmartFake implements _i3.UserSetting {
  _FakeUserSetting_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_2 extends _i1.SmartFake implements _i3.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIAppAuthenticationRepository_3 extends _i1.SmartFake
    implements _i3.IAppAuthenticationRepository {
  _FakeIAppAuthenticationRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterSecureStorage_4 extends _i1.SmartFake
    implements _i4.FlutterSecureStorage {
  _FakeFlutterSecureStorage_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_5 extends _i1.SmartFake implements _i5.FirebaseApp {
  _FakeFirebaseApp_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_6 extends _i1.SmartFake
    implements _i6.ActionCodeInfo {
  _FakeActionCodeInfo_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_7 extends _i1.SmartFake
    implements _i6.UserCredential {
  _FakeUserCredential_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_8 extends _i1.SmartFake
    implements _i6.ConfirmationResult {
  _FakeConfirmationResult_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_9 extends _i1.SmartFake implements _i4.IOSOptions {
  _FakeIOSOptions_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_10 extends _i1.SmartFake
    implements _i4.AndroidOptions {
  _FakeAndroidOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_11 extends _i1.SmartFake implements _i4.LinuxOptions {
  _FakeLinuxOptions_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_12 extends _i1.SmartFake
    implements _i4.WindowsOptions {
  _FakeWindowsOptions_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_13 extends _i1.SmartFake implements _i4.WebOptions {
  _FakeWebOptions_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_14 extends _i1.SmartFake implements _i4.MacOsOptions {
  _FakeMacOsOptions_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IHomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIHomeRepository extends _i1.Mock implements _i3.IHomeRepository {
  @override
  _i7.Future<
      _i2.Either<_i3.SomeFailure,
          List<_i3.QuestionModel>>> getQuestions() => (super.noSuchMethod(
        Invocation.method(
          #getQuestions,
          [],
        ),
        returnValue: _i7
            .Future<_i2.Either<_i3.SomeFailure, List<_i3.QuestionModel>>>.value(
            _FakeEither_0<_i3.SomeFailure, List<_i3.QuestionModel>>(
          this,
          Invocation.method(
            #getQuestions,
            [],
          ),
        )),
        returnValueForMissingStub: _i7
            .Future<_i2.Either<_i3.SomeFailure, List<_i3.QuestionModel>>>.value(
            _FakeEither_0<_i3.SomeFailure, List<_i3.QuestionModel>>(
          this,
          Invocation.method(
            #getQuestions,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.QuestionModel>>>);

  @override
  void addMockQuestions() => super.noSuchMethod(
        Invocation.method(
          #addMockQuestions,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IInformationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIInformationRepository extends _i1.Mock
    implements _i3.IInformationRepository {
  @override
  _i7.Stream<List<_i3.InformationModel>> getInformationItems() =>
      (super.noSuchMethod(
        Invocation.method(
          #getInformationItems,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.InformationModel>>.empty(),
        returnValueForMissingStub:
            _i7.Stream<List<_i3.InformationModel>>.empty(),
      ) as _i7.Stream<List<_i3.InformationModel>>);

  @override
  void addMockInformationItems() => super.noSuchMethod(
        Invocation.method(
          #addMockInformationItems,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IFeedbackRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIFeedbackRepository extends _i1.Mock
    implements _i3.IFeedbackRepository {
  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> sendFeedback(
          _i3.FeedbackModel? feedback) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFeedback,
          [feedback],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendFeedback,
            [feedback],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendFeedback,
            [feedback],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);
}

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i3.FirestoreService {
  @override
  _i7.Future<void> addFeedback(_i3.FeedbackModel? feedback) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFeedback,
          [feedback],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addQuestion(_i3.QuestionModel? question) =>
      (super.noSuchMethod(
        Invocation.method(
          #addQuestion,
          [question],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i3.QuestionModel>> getQuestions() => (super.noSuchMethod(
        Invocation.method(
          #getQuestions,
          [],
        ),
        returnValue:
            _i7.Future<List<_i3.QuestionModel>>.value(<_i3.QuestionModel>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i3.QuestionModel>>.value(<_i3.QuestionModel>[]),
      ) as _i7.Future<List<_i3.QuestionModel>>);

  @override
  _i7.Future<List<_i3.FundModel>> getFunds() => (super.noSuchMethod(
        Invocation.method(
          #getFunds,
          [],
        ),
        returnValue: _i7.Future<List<_i3.FundModel>>.value(<_i3.FundModel>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i3.FundModel>>.value(<_i3.FundModel>[]),
      ) as _i7.Future<List<_i3.FundModel>>);

  @override
  _i7.Future<void> addFund(_i3.FundModel? fund) => (super.noSuchMethod(
        Invocation.method(
          #addFund,
          [fund],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserSetting(_i3.UserSetting? userSetting) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [userSetting],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setUserSetting({
    required _i3.UserSetting? userSetting,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserSetting,
          [],
          {
            #userSetting: userSetting,
            #userId: userId,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [userId],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [userId],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Stream<List<_i3.InformationModel>> getInformations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getInformations,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.InformationModel>>.empty(),
        returnValueForMissingStub:
            _i7.Stream<List<_i3.InformationModel>>.empty(),
      ) as _i7.Stream<List<_i3.InformationModel>>);

  @override
  _i7.Future<void> addInformation(_i3.InformationModel? information) =>
      (super.noSuchMethod(
        Invocation.method(
          #addInformation,
          [information],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<List<_i3.WorkModel>> getWorks() => (super.noSuchMethod(
        Invocation.method(
          #getWorks,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.WorkModel>>.empty(),
        returnValueForMissingStub: _i7.Stream<List<_i3.WorkModel>>.empty(),
      ) as _i7.Stream<List<_i3.WorkModel>>);

  @override
  _i7.Future<void> addWork(_i3.WorkModel? work) => (super.noSuchMethod(
        Invocation.method(
          #addWork,
          [work],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [IInvestorsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIInvestorsRepository extends _i1.Mock
    implements _i3.IInvestorsRepository {
  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>> getFunds() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFunds,
          [],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>>.value(
                _FakeEither_0<_i3.SomeFailure, List<_i3.FundModel>>(
          this,
          Invocation.method(
            #getFunds,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>>.value(
                _FakeEither_0<_i3.SomeFailure, List<_i3.FundModel>>(
          this,
          Invocation.method(
            #getFunds,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, List<_i3.FundModel>>>);

  @override
  void addMockFunds() => super.noSuchMethod(
        Invocation.method(
          #addMockFunds,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IAppAuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAppAuthenticationRepository extends _i1.Mock
    implements _i3.IAppAuthenticationRepository {
  @override
  _i7.Stream<_i3.User> get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _i7.Stream<_i3.User>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.User>.empty(),
      ) as _i7.Stream<_i3.User>);

  @override
  _i3.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i3.User);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUpWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUp({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<String?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting() => (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> sendVerificationCode(
          {required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCode,
          [],
          {#email: email},
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> deleteUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> updateUserSetting(
          _i3.UserSetting? userSetting) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [userSetting],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);
}

/// A class which mocks [AppAuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppAuthenticationRepository extends _i1.Mock
    implements _i3.AppAuthenticationRepository {
  @override
  bool get isWeb => (super.noSuchMethod(
        Invocation.getter(#isWeb),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isWeb(bool? _isWeb) => super.noSuchMethod(
        Invocation.setter(
          #isWeb,
          _isWeb,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<_i3.User> get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _i7.Stream<_i3.User>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.User>.empty(),
      ) as _i7.Stream<_i3.User>);

  @override
  _i3.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i3.User);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUpWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUp({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<String?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting() => (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> sendVerificationCode(
          {required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCode,
          [],
          {#email: email},
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #sendVerificationCode,
            [],
            {#email: email},
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> deleteUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #deleteUser,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> updateUserSetting(
          _i3.UserSetting? userSetting) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [userSetting],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #updateUserSetting,
            [userSetting],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  @override
  _i3.IAppAuthenticationRepository get iAppAuthenticationRepository =>
      (super.noSuchMethod(
        Invocation.getter(#iAppAuthenticationRepository),
        returnValue: _FakeIAppAuthenticationRepository_3(
          this,
          Invocation.getter(#iAppAuthenticationRepository),
        ),
        returnValueForMissingStub: _FakeIAppAuthenticationRepository_3(
          this,
          Invocation.getter(#iAppAuthenticationRepository),
        ),
      ) as _i3.IAppAuthenticationRepository);

  @override
  _i7.Stream<_i3.AuthenticationStatus> get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i7.Stream<_i3.AuthenticationStatus>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.AuthenticationStatus>.empty(),
      ) as _i7.Stream<_i3.AuthenticationStatus>);

  @override
  _i3.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeUser_2(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i3.User);

  @override
  _i7.Future<_i3.UserSetting> getUserSetting() => (super.noSuchMethod(
        Invocation.method(
          #getUserSetting,
          [],
        ),
        returnValue: _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.UserSetting>.value(_FakeUserSetting_1(
          this,
          Invocation.method(
            #getUserSetting,
            [],
          ),
        )),
      ) as _i7.Future<_i3.UserSetting>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> logIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logIn,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logIn,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #logIn,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<_i2.Either<_i3.SomeFailure, bool>> signUpWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
            _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Either<_i3.SomeFailure, bool>>.value(
                _FakeEither_0<_i3.SomeFailure, bool>(
          this,
          Invocation.method(
            #signUpWithGoogle,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i3.SomeFailure, bool>>);

  @override
  _i7.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendVerificationCodeToEmail({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationCodeToEmail,
          [],
          {#email: email},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserSetting({required _i3.UserSetting? userSetting}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserSetting,
          [],
          {#userSetting: userSetting},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockIStorage extends _i1.Mock implements _i3.IStorage {
  @override
  _i4.FlutterSecureStorage get secureStorage => (super.noSuchMethod(
        Invocation.getter(#secureStorage),
        returnValue: _FakeFlutterSecureStorage_4(
          this,
          Invocation.getter(#secureStorage),
        ),
        returnValueForMissingStub: _FakeFlutterSecureStorage_4(
          this,
          Invocation.getter(#secureStorage),
        ),
      ) as _i4.FlutterSecureStorage);

  @override
  set secureStorage(_i4.FlutterSecureStorage? setSecureStorage) =>
      super.noSuchMethod(
        Invocation.setter(
          #secureStorage,
          setSecureStorage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<String?> readOne({required String? keyItem}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readOne,
          [],
          {#keyItem: keyItem},
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<bool> writeOne({
    required String? keyItem,
    required String? valueItem,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeOne,
          [],
          {
            #keyItem: keyItem,
            #valueItem: valueItem,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i8.GoogleSignIn {
  @override
  _i8.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i8.SignInOption.standard,
        returnValueForMissingStub: _i8.SignInOption.standard,
      ) as _i8.SignInOption);

  @override
  List<String> get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<_i8.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i7.Stream<_i8.GoogleSignInAccount?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i8.GoogleSignInAccount?>.empty(),
      ) as _i7.Stream<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
          {
            #suppressErrors: suppressErrors,
            #reAuthenticate: reAuthenticate,
          },
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<_i8.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i7.Future<_i8.GoogleSignInAccount?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i8.GoogleSignInAccount?>);

  @override
  _i7.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAccessScopes,
          [scopes],
          {#accessToken: accessToken},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i6.FirebaseAuth {
  @override
  _i5.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_5(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_5(
          this,
          Invocation.getter(#app),
        ),
      ) as _i5.FirebaseApp);

  @override
  set app(_i5.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i6.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i7.Future<_i6.ActionCodeInfo>.value(_FakeActionCodeInfo_6(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.ActionCodeInfo>.value(_FakeActionCodeInfo_6(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i7.Future<_i6.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i6.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i7.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i7.Future<List<String>>.value(<String>[]),
      ) as _i7.Future<List<String>>);

  @override
  _i7.Future<_i6.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<_i6.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i7.Stream<_i6.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i6.User?>.empty(),
      ) as _i7.Stream<_i6.User?>);

  @override
  _i7.Stream<_i6.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i7.Stream<_i6.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i6.User?>.empty(),
      ) as _i7.Stream<_i6.User?>);

  @override
  _i7.Stream<_i6.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i7.Stream<_i6.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i6.User?>.empty(),
      ) as _i7.Stream<_i6.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i6.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i6.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<_i6.UserCredential> signInWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<_i6.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<_i6.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<_i6.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<_i6.UserCredential> signInWithAuthProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<_i6.UserCredential> signInWithProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<_i6.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i6.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i7.Future<_i6.ConfirmationResult>.value(_FakeConfirmationResult_8(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.ConfirmationResult>.value(_FakeConfirmationResult_8(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i7.Future<_i6.ConfirmationResult>);

  @override
  _i7.Future<_i6.UserCredential> signInWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.UserCredential>.value(_FakeUserCredential_7(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i7.Future<_i6.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i6.PhoneMultiFactorInfo? multiFactorInfo,
    required _i6.PhoneVerificationCompleted? verificationCompleted,
    required _i6.PhoneVerificationFailed? verificationFailed,
    required _i6.PhoneCodeSent? codeSent,
    required _i6.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i6.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [IWorkRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIWorkRepository extends _i1.Mock implements _i3.IWorkRepository {
  @override
  _i7.Stream<List<_i3.WorkModel>> getWorks() => (super.noSuchMethod(
        Invocation.method(
          #getWorks,
          [],
        ),
        returnValue: _i7.Stream<List<_i3.WorkModel>>.empty(),
        returnValueForMissingStub: _i7.Stream<List<_i3.WorkModel>>.empty(),
      ) as _i7.Stream<List<_i3.WorkModel>>);

  @override
  void addMockWorks() => super.noSuchMethod(
        Invocation.method(
          #addMockWorks,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i4.FlutterSecureStorage {
  @override
  _i4.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_9(
          this,
          Invocation.getter(#iOptions),
        ),
        returnValueForMissingStub: _FakeIOSOptions_9(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i4.IOSOptions);

  @override
  _i4.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_10(
          this,
          Invocation.getter(#aOptions),
        ),
        returnValueForMissingStub: _FakeAndroidOptions_10(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i4.AndroidOptions);

  @override
  _i4.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_11(
          this,
          Invocation.getter(#lOptions),
        ),
        returnValueForMissingStub: _FakeLinuxOptions_11(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i4.LinuxOptions);

  @override
  _i4.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_12(
          this,
          Invocation.getter(#wOptions),
        ),
        returnValueForMissingStub: _FakeWindowsOptions_12(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i4.WindowsOptions);

  @override
  _i4.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_13(
          this,
          Invocation.getter(#webOptions),
        ),
        returnValueForMissingStub: _FakeWebOptions_13(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i4.WebOptions);

  @override
  _i4.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_14(
          this,
          Invocation.getter(#mOptions),
        ),
        returnValueForMissingStub: _FakeMacOsOptions_14(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i4.MacOsOptions);

  @override
  _i7.Future<void> write({
    required String? key,
    required String? value,
    _i4.IOSOptions? iOptions,
    _i4.AndroidOptions? aOptions,
    _i4.LinuxOptions? lOptions,
    _i4.WebOptions? webOptions,
    _i4.MacOsOptions? mOptions,
    _i4.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String?> read({
    required String? key,
    _i4.IOSOptions? iOptions,
    _i4.AndroidOptions? aOptions,
    _i4.LinuxOptions? lOptions,
    _i4.WebOptions? webOptions,
    _i4.MacOsOptions? mOptions,
    _i4.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<bool> containsKey({
    required String? key,
    _i4.IOSOptions? iOptions,
    _i4.AndroidOptions? aOptions,
    _i4.LinuxOptions? lOptions,
    _i4.WebOptions? webOptions,
    _i4.MacOsOptions? mOptions,
    _i4.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> delete({
    required String? key,
    _i4.IOSOptions? iOptions,
    _i4.AndroidOptions? aOptions,
    _i4.LinuxOptions? lOptions,
    _i4.WebOptions? webOptions,
    _i4.MacOsOptions? mOptions,
    _i4.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<Map<String, String>> readAll({
    _i4.IOSOptions? iOptions,
    _i4.AndroidOptions? aOptions,
    _i4.LinuxOptions? lOptions,
    _i4.WebOptions? webOptions,
    _i4.MacOsOptions? mOptions,
    _i4.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i7.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i7.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i7.Future<Map<String, String>>);

  @override
  _i7.Future<void> deleteAll({
    _i4.IOSOptions? iOptions,
    _i4.AndroidOptions? aOptions,
    _i4.LinuxOptions? lOptions,
    _i4.WebOptions? webOptions,
    _i4.MacOsOptions? mOptions,
    _i4.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
